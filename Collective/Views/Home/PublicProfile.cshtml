
@model Collective.Models.ProfileViewModel.ProfileViewModel
@using Collective.Data
@using Microsoft.AspNetCore.Identity
@using System.Linq
@using Collective.Models
@using Microsoft.EntityFrameworkCore
@using Collective.Controllers

@inject ApplicationDbContext _context
@inject UserManager<ApplicationUser> userManager

@{
    ViewData["Title"] = "PublicProfile";
}

<h2>@Model.User.UserName</h2>

<hr />
<div>
    <div class="row">
        <div class="col">
            @if (Model.User.UserImgPath != null)
            {
                <div style="width:200px;height:200px;position:relative;overflow:hidden;border-radius:50%;margin:auto;">
                    <img style="display:inline;margin:0,auto;margin-left:-25%;height:100%;width:auto;" src="@Url.Content(Model.User.UserImgPath)" alt="User Profile Image" />
                </div>
            }
            else
            {
                <div style="text-align:center" class="col-sm-8 mb-5 small">
                    <i class="far fa-user fa-10x"></i>
                    <h5>No Profile Image</h5>
                </div>
            }
            <dl>
                @if (Model.User.Bio != null)
                {
                    <dt class="col-sm-5 mt-5">
                        @Html.DisplayNameFor(model => model.User.Bio)
                    </dt>
                    <dd class="col-sm-8 mb-2">
                        @Html.DisplayFor(model => model.User.Bio)
                    </dd>
                }
                else
                {
                    <div class="col-sm-8 mb-2">
                        <p>User currently has no bio.</p>
                    </div>
                }
            </dl>
            <div class="col-sm-10 mt-5">
                <a style="font-size:2rem;" asp-controller="Collections" asp-action="Index">Milk Crate (@Model.Collection.Count())</a>
            </div>

        </div>
        <div class="col">
            <table class="table col-sm-8">
                @{
                    var top5 = @Model.Collection
                        .Where(col => col.TopFive == true)
                        .ToList();
                    var top5Count = top5.Count();
                }
                <thead>
                    <tr>
                        <th>
                        </th>
                    <tr />
                </thead>
                <h2>Top Five</h2>
                <tbody>
                    @if (top5Count > 0)
                    {
                        @foreach (var item in top5)
                        {
                            <tr>
                                <td>
                                    <div style="text-align:center;">
                                        <img style="height:150px" src="@Url.Content(item.Record.Cover_Image)" alt="album cover" /><br />
                                        @Html.DisplayFor(modelItem => item.Record.Title)<br />
                                        <div role="group" class="btn-group-vertical btn-group-sm">
                                            <a class="btn btn-primary" asp-controller="Search" asp-action="Details" asp-route-masterUrl="@item.Record.Master_Url" asp-route-imageUrl="@item.Record.Cover_Image">View</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td>
                                <div>
                                    <p>@Model.User.UserName is still working on picking their top five.</p>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>